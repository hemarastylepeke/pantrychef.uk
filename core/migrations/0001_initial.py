# Generated by Django 5.2.3 on 2025-10-12 20:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageProcessingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='processing_jobs/')),
                ('job_type', models.CharField(choices=[('expiry', 'Expiry Date'), ('ingredient', 'Ingredient ID')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('detected_text', models.TextField(blank=True)),
                ('processed_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('vegetables', 'Vegetables'), ('fruits', 'Fruits'), ('dairy', 'Dairy & Eggs'), ('meat', 'Meat & Poultry'), ('seafood', 'Seafood'), ('grains', 'Grains & Cereals'), ('legumes', 'Legumes & Nuts'), ('spices', 'Spices & Herbs'), ('condiments', 'Condiments & Sauces'), ('beverages', 'Beverages'), ('frozen', 'Frozen Foods'), ('bakery', 'Bakery'), ('canned', 'Canned Goods'), ('other', 'Other')], max_length=50)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('typical_expiry_days', models.IntegerField(blank=True, null=True)),
                ('storage_instructions', models.TextField(blank=True)),
                ('nutritional_info', models.JSONField(blank=True, default=dict)),
                ('common_units', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='core_ingred_name_2018b7_idx'), models.Index(fields=['category'], name='core_ingred_categor_597fd5_idx'), models.Index(fields=['barcode'], name='core_ingred_barcode_9cba5f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('EASY', 'Easy'), ('MEDIUM', 'Medium'), ('HARD', 'Hard')], max_length=10)),
                ('prep_time', models.IntegerField(help_text='Preparation time in minutes')),
                ('cook_time', models.IntegerField(help_text='Cooking time in minutes')),
                ('cuisine', models.CharField(choices=[('italian', 'Italian'), ('mexican', 'Mexican'), ('asian', 'Asian'), ('indian', 'Indian'), ('mediterranean', 'Mediterranean'), ('american', 'American'), ('french', 'French'), ('thai', 'Thai'), ('chinese', 'Chinese'), ('japanese', 'Japanese'), ('other', 'Other')], max_length=50)),
                ('servings', models.IntegerField()),
                ('ingredients', models.JSONField(default=list)),
                ('instructions', models.JSONField(default=list)),
                ('nutritional_info', models.JSONField(default=dict)),
                ('dietary_tags', models.JSONField(default=list)),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipe_images/')),
                ('average_rating', models.FloatField(default=0)),
                ('rating_count', models.IntegerField(default=0)),
                ('is_ai_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Weekly Shopping List', max_length=200)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('generated', 'AI Generated'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('budget_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_estimated_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('ai_metrics', models.JSONField(blank=True, default=dict)),
                ('week_number', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('estimated_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('actual_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('priority', models.CharField(choices=[('high', 'High Priority'), ('medium', 'Medium Priority'), ('low', 'Low Priority')], default='medium', max_length=20)),
                ('purchased', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('reason', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ingredient')),
                ('shopping_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.shoppinglist')),
            ],
            options={
                'ordering': ['priority', 'ingredient__name'],
            },
        ),
        migrations.CreateModel(
            name='UserPantry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_name', models.CharField(blank=True, max_length=200)),
                ('quantity', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('purchase_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='pantry_images/')),
                ('expiry_label_image', models.ImageField(blank=True, null=True, upload_to='expiry_labels/')),
                ('detected_expiry_text', models.TextField(blank=True)),
                ('detection_confidence', models.FloatField(blank=True, null=True)),
                ('detection_source', models.CharField(choices=[('manual', 'Manual Entry'), ('vision_api', 'Google Vision API'), ('barcode', 'Barcode Scan')], default='manual', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('consumed', 'Consumed'), ('wasted', 'Wasted'), ('expired', 'Expired')], default='active', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ingredient')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User pantries',
                'ordering': ['expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='ConsumptionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_used', models.FloatField()),
                ('date_consumed', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.recipe')),
                ('pantry_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.userpantry')),
            ],
            options={
                'ordering': ['-date_consumed'],
            },
        ),
        migrations.CreateModel(
            name='FoodWasteRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_quantity', models.FloatField()),
                ('quantity_wasted', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('reason', models.CharField(choices=[('expired', 'Expired'), ('over_purchased', 'Over Purchased'), ('didnt_like', "Didn't Like"), ('recipe_change', 'Recipe Changed'), ('forgot_about', 'Forgot About It'), ('other', 'Other')], max_length=50)),
                ('reason_details', models.TextField(blank=True)),
                ('purchase_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('waste_date', models.DateField(auto_now_add=True)),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ingredient')),
            ],
            options={
                'ordering': ['-waste_date'],
                'indexes': [models.Index(fields=['user', 'waste_date'], name='core_foodwa_user_id_477233_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['cuisine'], name='core_recipe_cuisine_e990f2_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['difficulty'], name='core_recipe_difficu_0ca800_idx'),
        ),
        migrations.AddIndex(
            model_name='recipe',
            index=models.Index(fields=['dietary_tags'], name='core_recipe_dietary_55fb9b_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppinglist',
            index=models.Index(fields=['user', 'status'], name='core_shoppi_user_id_9b6d2c_idx'),
        ),
        migrations.AddIndex(
            model_name='shoppinglist',
            index=models.Index(fields=['year', 'week_number'], name='core_shoppi_year_298de5_idx'),
        ),
        migrations.AddIndex(
            model_name='userpantry',
            index=models.Index(fields=['user', 'status'], name='core_userpa_user_id_218742_idx'),
        ),
        migrations.AddIndex(
            model_name='userpantry',
            index=models.Index(fields=['expiry_date'], name='core_userpa_expiry__3b0bab_idx'),
        ),
        migrations.AddIndex(
            model_name='userpantry',
            index=models.Index(fields=['user', 'expiry_date'], name='core_userpa_user_id_3baf36_idx'),
        ),
    ]
